{"mappings":"ACEA,IAAM,EAAmB,SAAC,CAAA,CAAS,CAAnC,EACE,IAAM,EAAa,SAAS,aAAa,CAAC,OAE1C,EAAW,YAAY,CAAC,UAAW,gBACnC,EAAW,SAAS,CAAC,GAAG,CAAC,EAAY,UAAY,SACjD,EAAW,WAAW,CAAG,EACzB,SAAS,IAAI,CAAC,WAAW,CAAC,EAC5B,EAEA,SAAS,gBAAgB,CAAC,mBAAoB,WAoB5C,AAjBqB,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA3C,EACE,SAAS,EAAY,CAAC,EACH,IAAb,EAAE,MAAM,GACV,EAAQ,8BACR,SAAS,mBAAmB,CAAC,QAAS,GAE1C,CAEA,SAAS,gBAAgB,CAAC,QAAS,GAEnC,WAAW,WAET,EAAO,8BACP,SAAS,mBAAmB,CAAC,QAAS,EACxC,EAAG,IACL,GAGG,IAAI,CAAC,SAAC,CADT,EAEI,EAAiB,EAAS,CAAA,EAC5B,GACC,KAAK,CAAC,SAAC,CADR,EAEE,EAAiB,EAAO,CAAA,EAC1B,GAkBF,AAfsB,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA5C,EAWE,SAAS,IAAI,CAAC,gBAAgB,CAAC,QAV/B,SAAS,EAAgB,CAAC,EACxB,EAAQ,+BACR,SAAS,IAAI,CAAC,mBAAmB,CAAC,QAAS,EAC7C,GAQA,SAAS,IAAI,CAAC,gBAAgB,CAAC,cAN/B,SAAS,EAAiB,CAAC,EACzB,EAAQ,+BACR,SAAS,IAAI,CAAC,mBAAmB,CAAC,QAAS,EAC7C,EAIF,GAGG,IAAI,CAAC,SAAC,CADT,EAEI,EAAiB,EAAS,CAAA,EAC5B,GACC,KAAK,CAAC,SAAC,CADR,EAEE,EAAiB,EAAO,CAAA,EAC1B,GA6BF,AA1BqB,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA3C,EACE,IAAI,EAAc,CAAA,EACd,EAAe,CAAA,EAoBnB,SAAS,gBAAgB,CAAC,QAlBF,WACtB,EAAc,CAAA,EAEV,AAAe,GACjB,EAAQ,6BAEZ,GAaA,SAAS,gBAAgB,CAAC,cAXD,SAAC,CAA1B,EACE,EAAE,cAAc,GAEhB,EAAe,CAAA,EAEX,GAAe,GACjB,EAAQ,6BAEZ,EAIF,GAGG,IAAI,CAAC,SAAC,CADT,EACqB,OAAA,EAAiB,EAAS,CAAA,EAC5C,GAAA,KAAK,CAAC,SAAC,CAAP,EACC,EAAiB,EAAO,CAAA,EAC1B,GACF,SAAS,gBAAgB,CAAC,cAAe,SAAC,CAA1C,EAAiD,OAAA,EAAG,cAAc,E,EACpE","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar succsesErrorFunc = function(message, isSuccess) {\n    var successDiv = document.createElement(\"div\");\n    successDiv.setAttribute(\"data-qa\", \"notification\");\n    successDiv.classList.add(isSuccess ? \"success\" : \"error\");\n    successDiv.textContent = message;\n    document.body.appendChild(successDiv);\n};\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    // firstPromise\n    var firstPromise = new Promise(function(resolve, reject) {\n        function handleClick(e) {\n            if (e.button === 0) {\n                resolve(\"First promise was resolved\");\n                document.removeEventListener(\"click\", handleClick);\n            }\n        }\n        document.addEventListener(\"click\", handleClick);\n        setTimeout(function() {\n            // eslint-disable-next-line prefer-promise-reject-errors\n            reject(\"First promise was rejected\");\n            document.removeEventListener(\"click\", handleClick);\n        }, 3000);\n    });\n    firstPromise.then(function(message) {\n        succsesErrorFunc(message, true);\n    }).catch(function(error) {\n        succsesErrorFunc(error, false);\n    });\n    // secondPromise\n    var secondPromise = new Promise(function(resolve, reject) {\n        function handleLeftClick(e) {\n            resolve(\"Second promise was resolved\");\n            document.body.removeEventListener(\"click\", handleLeftClick);\n        }\n        function handleRightClick(e) {\n            resolve(\"Second promise was resolved\");\n            document.body.removeEventListener(\"click\", handleRightClick);\n        }\n        document.body.addEventListener(\"click\", handleLeftClick);\n        document.body.addEventListener(\"contextmenu\", handleRightClick);\n    });\n    secondPromise.then(function(message) {\n        succsesErrorFunc(message, true);\n    }).catch(function(error) {\n        succsesErrorFunc(error, false);\n    });\n    // thirdPromise\n    var thirdPromise = new Promise(function(resolve, reject) {\n        var leftClicked = false;\n        var rightClicked = false;\n        var handleLeftClick = function() {\n            leftClicked = true;\n            if (leftClicked && rightClicked) resolve(\"Third promise was resolved\");\n        };\n        var handleRightClick = function(e) {\n            e.preventDefault();\n            rightClicked = true;\n            if (leftClicked && rightClicked) resolve(\"Third promise was resolved\");\n        };\n        document.addEventListener(\"click\", handleLeftClick);\n        document.addEventListener(\"contextmenu\", handleRightClick);\n    });\n    thirdPromise.then(function(message) {\n        return succsesErrorFunc(message, true);\n    }).catch(function(error) {\n        succsesErrorFunc(error, false);\n    });\n    document.addEventListener(\"contextmenu\", function(ev) {\n        return ev.preventDefault();\n    });\n});\n\n//# sourceMappingURL=index.f3be94d8.js.map\n","'use strict';\n\nconst succsesErrorFunc = (message, isSuccess) => {\n  const successDiv = document.createElement('div');\n\n  successDiv.setAttribute('data-qa', 'notification');\n  successDiv.classList.add(isSuccess ? 'success' : 'error');\n  successDiv.textContent = message;\n  document.body.appendChild(successDiv);\n};\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  // firstPromise\n\n  const firstPromise = new Promise((resolve, reject) => {\n    function handleClick(e) {\n      if (e.button === 0) {\n        resolve('First promise was resolved');\n        document.removeEventListener('click', handleClick);\n      }\n    }\n\n    document.addEventListener('click', handleClick);\n\n    setTimeout(() => {\n      // eslint-disable-next-line prefer-promise-reject-errors\n      reject('First promise was rejected');\n      document.removeEventListener('click', handleClick);\n    }, 3000);\n  });\n\n  firstPromise\n    .then((message) => {\n      succsesErrorFunc(message, true);\n    })\n    .catch((error) => {\n      succsesErrorFunc(error, false);\n    });\n\n  // secondPromise\n  const secondPromise = new Promise((resolve, reject) => {\n    function handleLeftClick(e) {\n      resolve('Second promise was resolved');\n      document.body.removeEventListener('click', handleLeftClick);\n    }\n\n    function handleRightClick(e) {\n      resolve('Second promise was resolved');\n      document.body.removeEventListener('click', handleRightClick);\n    }\n\n    document.body.addEventListener('click', handleLeftClick);\n    document.body.addEventListener('contextmenu', handleRightClick);\n  });\n\n  secondPromise\n    .then((message) => {\n      succsesErrorFunc(message, true);\n    })\n    .catch((error) => {\n      succsesErrorFunc(error, false);\n    });\n\n  // thirdPromise\n  const thirdPromise = new Promise((resolve, reject) => {\n    let leftClicked = false;\n    let rightClicked = false;\n\n    const handleLeftClick = () => {\n      leftClicked = true;\n\n      if (leftClicked && rightClicked) {\n        resolve('Third promise was resolved');\n      }\n    };\n\n    const handleRightClick = (e) => {\n      e.preventDefault();\n\n      rightClicked = true;\n\n      if (leftClicked && rightClicked) {\n        resolve('Third promise was resolved');\n      }\n    };\n\n    document.addEventListener('click', handleLeftClick);\n    document.addEventListener('contextmenu', handleRightClick);\n  });\n\n  thirdPromise\n    .then((message) => succsesErrorFunc(message, true))\n    .catch((error) => {\n      succsesErrorFunc(error, false);\n    });\n  document.addEventListener('contextmenu', (ev) => ev.preventDefault());\n});\n"],"names":["succsesErrorFunc","message","isSuccess","successDiv","document","createElement","setAttribute","classList","add","textContent","body","appendChild","addEventListener","firstPromise","Promise","resolve","reject","handleClick","e","button","removeEventListener","setTimeout","then","catch","error","secondPromise","handleLeftClick","handleRightClick","thirdPromise","leftClicked","rightClicked","preventDefault","ev"],"version":3,"file":"index.f3be94d8.js.map"}